--1
--1.1

CREATE TABLE Mitarbeiter (
  MitID char(3) PRIMARY KEY Not Null, 
  MitName VARCHAR(20),
  MitVorname varchar(20),
  MitGebDat Date Not Null,
  MitJob varchar(20) Not Null,
  MitStundensatz smallmoney,
  MitEinsatzort varchar(20)
)

CREATE TABLE Kunde (
  KunNr Int Primary Key Not Null,
  KunName varchar(20) Not Null,
  KunOrt varchar(20) Not Null,
  KunPLZ char(5) Not Null,
  KunStrasse varchar(20) Not Null
)

CREATE TABLE Ersatzteil (
  EtID char(5) Primary key Not Null,
  EtBezeichnung varchar(100) Not Null,
  EtPreis smallmoney Not Null,
  EtAnzLager Int Not Null,
  EtHersteller varchar(30) Not Null
)

--1.2
INSERT INTO Mitarbeiter SELECT * FROM trommelhelden..quelleMitarbeiter
INSERT INTO Kunde SELECT * FROM trommelhelden..quelleKunde
INSERT INTO Ersatzteil SELECT * FROM trommelhelden..quelleErsatzteil

select * from Mitarbeiter 
select * from Kunde
select * from Ersatzteil

--1.3
SELECT * INTO Auftrag FROM trommelhelden..quelleAuftrag
SELECT * INTO Montage FROM trommelhelden..quelleMontage

--1.4
Alter table Auftrag 
  add primary key (AufNr);
  Alter table Auftrag add foreign key (MitID) References Mitarbeiter (MitID);
  Alter table Auftrag add foreign key (KunNr) References Kunde (KunNr);

Alter table Montage
  add primary key (AufNr, EtID);
  Alter table Montage add foreign key (EtID) References Ersatzteil (EtID);
  Alter table Montage add foreign key (AufNr) References Auftrag (AufNr);

--2
--2.1
--a
select * from Kunde where KunOrt = 'Radebeul';
--b
SELECT * FROM Kunde WHERE KunOrt NOT LIKE 'Chemnitz';
--c
select * from Ersatzteil where EtBezeichnung like 'S%';
--d
select * from Auftrag where Dauer between 2 and 3 or Anfahrt >= 80;
--e
select MitName,MitJob from Mitarbeiter where MitEinsatzort = 'Radebeul' Order by MitName; --Ändern Nicht nur MIt
select * from Auftrag where	Dauer is Null;
--g
select KunNr, Anfahrt, Anfahrt*2.5 as Anfahrtskosten from Auftrag;

--2.2
--a
select MitID, MitName, MitVorname, MitGebDat,
case when dateadd(year, Datediff(year, MitGebDat, getdate()), MitGebDat) > getdate()
	then datediff(year, MitGebDat, getdate()) -1
	else datediff(year, MitGebDat, getdate()) end as "Alter"
from Mitarbeiter;

--b
select Aufnr, AufDat, ErlDat, datediff(day, AufDat, ErlDat) as Frist 
from Auftrag where datepart(month, ErlDat) = datepart(month, getdate());

--c

select Aufnr,isnull(Dauer, 0) from Auftrag;

--2.3
--a
select count(KunNr) from Kunde; 
--b
select KunOrt, count(KunNr) as Kundenanzahl from Kunde group by KunOrt;
--c
select MitID, avg(Dauer) as durchschnitt from Auftrag group by MitID;
--d
select MitID, avg(Dauer) as durchschnitt, min(dauer) as minimum, max(dauer) as maximum from Auftrag group by MitID;
--e
select MitID, avg(Dauer) as durchschnitt, ErlDat, count(ErlDat) as Auf_proTag from Auftrag group by MitID, ErlDat;
--f
select min(AufDat) as minimum_Dat from Auftrag where ErlDat is null;

--2.4
--b
select MitID, DATEPART(dw, ErlDat) as Wochentag, AVG(Dauer) as DurchschnittlicheDauer from Auftrag where MitID is not null Group by MitID , DATEPART(weekday,ErlDat);
--b
select MitID, avg(Dauer) as Mo from Auftrag  where Datepart(weekday,ErlDat) = '1' group by MitID; 
select MitID, avg(Dauer) as Di from Auftrag  where Datepart(weekday,ErlDat) = '2' group by MitID;
select MitID, avg(Dauer) as Mi from Auftrag  where Datepart(weekday,ErlDat) = '3' group by MitID;
select MitID, avg(Dauer) as Do from Auftrag  where Datepart(weekday,ErlDat) = '4' group by MitID;
select MitID, avg(Dauer) as Fr from Auftrag  where Datepart(weekday,ErlDat) = '5' group by MitID;
select MitID, avg(Dauer) as Sa from Auftrag  where Datepart(weekday,ErlDat) = '6' group by MitID;
select MitID, avg(Dauer) as So from Auftrag  where Datepart(weekday,ErlDat) = '7' group by MitID;


--2.5
--a
select AufNr, EtBezeichnung, Anzahl, EtPreis , Anzahl * EtPreis As EtKosten from Montage M Join Ersatzteil E on M.EtID = E.EtID;
--b
select AufNr, Dauer * MitStundensatz as Lohnkosten from Auftrag A Join Mitarbeiter M on A.MitID = M.MitID;
--c
select KunName, KunOrt, Anfahrt from Kunde K Join  Auftrag A on K.KunNr = A.KunNr where Anfahrt > 50;
--d
select KunNr from Auftrag A Join Montage M on A.AufNr = M.AufNr where EtID = 'H0230' And datediff(month,getdate(),ErlDat) <= 02;
--e
select a.Aufnr,
	SUM(m.Anzahl*e.EtPreis) as Materialkosten,
	AVG(Dauer*i.MitStundensatz) as Lohnkosten,
	AVG(a.Anfahrt)*0.2 as Fahrtkosten
from Auftrag a Join Montage m on m.AufNr=a.Aufnr Join Mitarbeiter i on i.MitID=a.MitID Join Ersatzteil e on e.EtID=m.EtID 
Group by a.Aufnr
--f
select a.Aufnr, a.AufDat, m.Mitname from Auftrag a Left Join Mitarbeiter m on a.MitID=m.MitID where MONTH(a.AufDat) = MONTH(GETDATE());
--g
select e.EtID,
SUM(m.Anzahl)
from Ersatzteil e Join Montage m on m.EtID=e.EtID Join (select * from Auftrag where MONTH(ErlDat) = MONTH(GETDATE())-1) a on a.Aufnr=m.AufNr
Group by e.EtID;
--2.6
--a
select m.MitID, m.MitName, m.MitVorname
from Mitarbeiter m
Where not exists(select a.MitID from Auftrag a Where Month(AufDat) = Month(getdate()) and (Year(AufDat) = Year(getdate())) And a.MitID = m.MitID);

--b
Select  a.Aufnr,
		(Dauer*m.MitStundensatz) as Lohnkosten,
		(a.Anfahrt)*0.2 as Fahrtkosten
From Auftrag a Join Mitarbeiter m on a.MitID = m.MitId 
Where (not exists(Select n.EtId from Montage n Where a.Aufnr = n.AufNR)) and a.Dauer is not null

--anders)
Select  a.Aufnr,
		(Dauer*m.MitStundensatz) as Lohnkosten,
		(a.Anfahrt)*0.2 as Fahrtkosten
from Auftrag a Join Mitarbeiter m on a.MitID = m.MitId 
Where a.Aufnr not in (Select AufNr From Montage) and a.Dauer is not null

--c)
Select Aufnr 
from Auftrag
Where ErlDat = (Select Min(ErlDat) from Auftrag Where ErlDat is not Null And Dauer is Null);

--d)
Select KunNr 
From Auftrag 
Where KunNr not in (Select KunNR From Auftrag Where Month(AufDat) != 3);

--e)
--Korreliert
Select MitId, a1.Aufnr, Dauer
from Auftrag a1
where Dauer = (Select max(dauer) 
			   from Auftrag a2 
			   Where a1.MitId = a2.MitID)
			   Group by MitId, Dauer, a1.AufNr

--unkorrelliert
Select a1.MitId, a1.Aufnr, a2.MaxDauer
from Auftrag a1, (Select MitID, max(dauer) MaxDauer from Auftrag where dauer is not null group by mitid) as a2
where a1.mitid=a2.MitID
and a1.dauer=a2.MaxDauer
Group by a1.MitID, a1.Aufnr, a2.MaxDauer

--2.7
--a
select MitID, sum(Anfahrt)
from Auftrag
where month(ErlDat) = 4
group by MitID
having sum(Anfahrt) > 500

--b
select e.EtID, EtAnzLager, sum(m.Anzahl)
from Ersatzteil e, Montage m
group by e.EtID, e.EtAnzLager
having e.EtAnzLager > sum(m.Anzahl)

select m.EtID, sum(Anzahl), EtAnzLager
from Montage m, Ersatzteil e
group by m.EtID, EtAnzLager
having sum(Anzahl) < EtAnzLager
-- beide falsch

--b
select m.EtID 
from Montage m
group by m.EtID
Having SUM(m.Anzahl) < (select e.EtAnzLager as Anzahl1
						from Ersatzteil e
						where m.EtID=e.EtID)
--2.8a
select * from Kunde

insert into Kunde
Values ((select MAX(KunNr) from Kunde)+1,'Munkelt','Torsten','01069','FrListPlatz 1')

insert into Auftrag
Values ((select MAX(Aufnr) from Auftrag)+1,NULL,(select KunNr from Kunde where KunName = 'Munkelt'),GETDATE(),NULL,NULL,NULL,NULL)

--2.8b
Update Mitarbeiter 
Set MitJob ='Monteur1',
MitStundensatz = (select MIN(MitStundensatz)
					from Mitarbeiter
					where MitJob ='Monteur')
where MitJob ='Azubi'



--2.8c
select * into Montage1 from Montage

 select * into Ersatzteil1 from Ersatzteil
 delete from Montage1 where EtID in select(EtID from Ersatzteil1 where EtHersteller = 'Mosch')
 delete from Ersatzteil1 where EtHersteller = 'Mosch'

 select * from Ersatzteil1

 --2.8d
select * into Montage2 from Montage
select * into Auftrag2 from Auftrag
select * into Kunde2 from Kunde

select distinct * into tempKunde from Kunde where KunNr not in (select KunNr from Auftrag where Month(AufDat) != 3 or Dauer is null)

delete from Montage2 Where AufNr in (select AufNr from Auftrag2 where Month(AufDat) = 3)
delete from Auftrag2 where Month(AufDat) = 3
delete from tempKunde from Kunde2

select
--2.9

select KunOrt
from Kunde
 Except
select MitEinsatzort
from Mitarbeiter


select KunOrt
from Kunde
 Intersect
select MitEinsatzort
from Mitarbeiter


select KunOrt
from Kunde
 Union
select MitEinsatzort
from Mitarbeiter
where MitEinsatzort is not Null


--2.10

Create View Auftragswert 
as 

select AufNr,
	
	(Select ErlDat
	from Auftrag
	where m.AufNr = Aufnr) as ErlDat,

	
	(select KunOrt
	from Kunde
	where KunNr=
		(Select KunNr
		from Auftrag
		where m.AufNr = Aufnr)
	) as KunOrt,
	
Sum(EtPreis*m.Anzahl) as Materialkosten,
	
	(select Anfahrt*0.2
	from Auftrag
	where Aufnr=m.AufNr)  as Anfahrtskosten,
	
	(select Dauer * (select MitStundensatz
						from Mitarbeiter
						where MitID=a.MitID)
	from Auftrag a
	where Aufnr=m.AufNr) as Lohnkosten
	
from Montage m, Ersatzteil e
where e.EtID=m.EtID
group by AufNr

select *,Materialkosten+Anfahrtskosten+Lohnkosten as Gesamtkosten from Auftragswert

Drop view Auftragswert


--2.11

select Aufnr, Anfahrt,
	Case
		when Anfahrt*2.5 < 30 then 30 
		else Anfahrt*2.5
	End as Anfahrtspreis
from Auftrag
where Anfahrt is not null


--3.1

create Procedure KundenjeMitarbeiter
as
	select MitID, KunNr, Count(Aufnr)
	from Auftrag
	where MitID is not null
	group by MitID, KunNr
return

exec KundenjeMitarbeiter 

--3.2
create procedure AGroeßer(@Parameter nvarchar(10))
as
	select EtID, Sum(Anzahl) As Häufigkeit
	from montage 
	Group by EtID 
	having Sum(Anzahl) > @Parameter
return 
exec AGroeßer '45'
